{"version":3,"sources":["logo.svg","Loggin.js","NavBar.js","StartSurvey.js","HowTo.js","SearchBar.js","ResultsMap.js","FindRoute.js","PlaceCards.js","Carousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","NavBar","Navbar","bg","expand","Brand","href","id","Toggle","area-controls","Collapse","Nav","NavLink","Footer","StartSurvey","className","Card","Body","Title","Button","variant","HowTo","state","imgs","bgImage","this","target","google","window","SearchBar","props","searchInput","createRef","search","handlePlaceChanged","bind","maps","places","SearchBox","current","addListener","place","getPlaces","startLocation","name","lat","geometry","location","long","lng","length","ref","placeholder","type","dummyState","start","distance","amenity","restaurant","leisure","end","ResultsMap","startPosition","redIcon","L","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","blueIcon","Map","center","zoom","TileLayer","attribution","url","Marker","position","icon","Popup","oLink","typeStrings","Object","keys","fetch","then","response","json","data","numsUsed","i","index","Math","round","random","includes","push","amenitiesList","leisureList","radius","link","bounds","calculateBB","console","log","upperLat","getLatDiff","toFixed","upperLong","getLongDiff","lowerLat","lowerLong","cos","PI","FindRoute","CreateForm","handleSubmit","handleChecks","amenityTypes","Form","Group","Label","InputGroup","Control","min","step","Append","Text","createSurvey","onClick","placeTypes","overpassType","charAt","toUpperCase","slice","map","Check","label","defaultChecked","e","elements","checked","setState","prevState","pT","NavButton","size","Heart","faHeart","PlaceCards","hello","Img","src","source","style","padding","alt","description","PlaceGroup","favPlace","library","add","FavButton","PlaceHover","CarouselPlace","Carousel","Item","App","cardPlaces","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7286d85e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport class Loggin extends React.Component {\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"card\">\n                    <form>\n                        <div className=\"form-group row\">\n                            <label for=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Email</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"email\" className=\"form-control\" id=\"inputEmail3\" placeholder=\"ex: johnsmith@aol.com\">\n                                    </input>\n                            </div>\n\n                            <label for=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Password</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"password\" className=\"form-control\" id=\"inputEmail3\" placeholder=\"Password\">\n                                    </input>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                        <div className=\"col-sm-10 offset-sm-2\">\n                            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                        </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Navbar, NavItem, Nav, NavLink} from 'react-bootstrap';\nimport './surveyStyle.css';\n\n// export class Global extends React.Component {\n    \n\n    \n//     render() {\n//         return (\n//             <NavBar />\n//             <Footer />\n//         );\n//     }\n// }\n\nexport class NavBar extends React.Component {\n    render() {\n        return (\n            <Navbar bg=\"light\" expand=\"sm\">\n                <Navbar.Brand href=\"#Home\" id=\"navbar-brand\">Walk Buddy</Navbar.Brand>\n                <Navbar.Toggle area-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav>\n                        <NavLink href=\"#Home\">Home</NavLink>\n                        <NavLink href=\"#How-To\">How-To</NavLink>\n                        <NavLink href=\"#Places\">Places</NavLink>\n                        <NavLink href=\"#Login\">Login</NavLink>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport class Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                <p>© 2020 Jocelyn Afandi &amp; Anna Zhou</p>\n            </footer>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Card,Button} from 'react-bootstrap';\n\n\nexport class StartSurvey extends React.Component {\n    render() {\n        return (\n            \n            <div id=\"beginWrap\">\n                <div id=\"begin\" className=\"d-flex\">\n                    <Card className=\"bg-light border-light text-center p-1\">\n                        <Card.Body>\n                            <Card.Title className=\"text-center\">Let's Take a Walk...</Card.Title>\n                            <Button variant=\"primary\" className=\"shadow\" id=\"BEGINNN\" href=\"#\">Begin</Button>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Parallax } from \"react-parallax\";\nimport {StartSurvey} from './StartSurvey.js';\nimport {NavBar,Footer} from './NavBar.js'\n\nexport class HowTo extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            imgs: [\"https://images.unsplash.com/photo-1455594408994-253112b1b26e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80\",\n                   \"https://images.unsplash.com/photo-1529911428236-64aeb97a6de2?ixlib=rb-1.2.1&auto=format&fit=crop&w=1789&q=80\",\n                   \"https://images.unsplash.com/photo-1442512595331-e89e73853f31?ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\",\n                   \"https://images.unsplash.com/photo-1559511332-cd0f6550aca1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80\"]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <Parallax bgImage={this.state.imgs[0]} className=\"bg-img\">\n                    <div className=\"pWrap\">\n                        <div className=\"caption\">\n                            <span className=\"border rounded\">Plan Your Stress Free Walk Today!</span>\n                        </div>\n                        <div className=\"unsplash-credit border rounded\">\n                            <span>Photo by <a href=\"https://unsplash.com/@akeenster?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" target=\"_blank\">Abigail Keenan</a></span>\n                        </div>\n                    </div>\n                </Parallax>\n\n                <div className=\"desc-text\">\n                    <div className=\"desc-wrapper\">\n                        <h1 className='desc-header'><em>Walk Buddy will help you find personalized walk routes that fit your needs\n                            and help you destress!</em></h1>\n                        <p>Life can get stressful, and a great way to cope with that and destress\n                            is to go on walks. A study in Germany showed that mindful walking could reduce stress levels on\n                            adults.\n                            Going to places can help to brighten one’s day, but at the same time, we want to ensure that one\n                            does\n                            not encounter something stressful along the way. Oftentimes, people only\n                            know of nice walking paths from experience or word of mouth. To make matters even more complicated,\n                            destressing comes in many forms, and different populations have different versions of stress.\n                            This is where we come in.</p>\n                    </div>\n                </div>\n                \n                <Parallax bgImage={this.state.imgs[1]} className=\"bg-img\">\n                    <div className=\"pWrap\">\n                        <div className=\"caption\">\n                            <span className=\"border rounded\">Step 1: Figure out where to go</span>\n                        </div>\n                        <div className=\"unsplash-credit\">\n                            <span>Photo by <a href=\"https://unsplash.com/@milanseitler?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" target=\"_blank\" >Milan Seitler</a></span>\n                        </div>\n                    </div>\n                </Parallax>\n\n                <div className=\"desc-text\">\n                    <div className=\"desc-wrapper\">\n                        <h1 className='desc-header'><em>Don't know where to go? No worries!</em></h1>\n                        <p>Our survey will take you through a series of steps to figure out what and where you want to go.\n                            You'll be\n                            able to filter on categories like distance, location, sound level, destination type, level of\n                            hilliness\n                            and many more!</p>\n                    </div>\n                </div>\n\n                <Parallax bgImage={this.state.imgs[2]} className=\"bg-img\">\n                    <div className=\"pWrap\">\n                        <div className=\"caption\">\n                            <span className=\"border rounded\">Step 2: Choose your destination</span>\n                        </div>\n                        <div className=\"unsplash-credit\">\n                            <span>Photo by <a href=\"https://unsplash.com/@kfred?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" target=\"_blank\">Karl Fredrickson</a></span>\n                        </div>\n                    </div>\n                </Parallax>\n\n                <div className=\"desc-text\">\n                    <div className='desc-wrapper'>\n                        <h1 className='desc-header'><em>Our survey will give you a list of personalized suggested locations to walk\n                                to.</em></h1>\n                        <p>Explore routes and learn more about your local area based off your personalized suggestions! We\n                            utilize\n                            user reviews to help you decide which routes would be best for you. If there are simply too many\n                            routes\n                            that you want to do, you will also have the option to save them for future use. </p>\n                    </div>\n                </div>\n\n                <Parallax bgImage={this.state.imgs[3]} className=\"bg-img\">\n                    <div className=\"pWrap\">\n                        <div className=\"caption\">\n                            <span className=\"border rounded\">Step 3: Start Walking!</span>\n                        </div>\n                        <div className=\"unsplash-credit\">\n                            <span>Photo by <a href=\"https://unsplash.com/@kfred?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\">Karl Fredrickson</a></span>\n                        </div>\n                    </div>\n                </Parallax>\n\n                <div className=\"desc-text\">\n                    <div className=\"desc-wrapper\">\n                        <h1 className='desc-header'><em>Head to our home page to start relaxing</em></h1>\n                        \n                        {<StartSurvey />}\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}","import React from \"react\";\n// import { start } from \"repl\";\n// import {SearchBox} from \"react-google-maps/lib/components/places/SearchBox.js\";\n\n/* global google */\nconst google = window.google;\n\nexport class SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.searchInput = React.createRef();\n        this.search = null;\n        this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.search = new google.maps.places.SearchBox(this.searchInput.current);\n\n        this.search.addListener('places_changed', this.handlePlaceChanged);\n    }\n\n    handlePlaceChanged() {\n        let place = this.search.getPlaces();\n        let startLocation = {};\n        startLocation.name = place[0].name;\n        startLocation.lat = place[0].geometry.location.lat();\n        startLocation.long = place[0].geometry.location.lng();\n        if (place.length == 0) {\n            return;\n        }\n\n        this.state.place = startLocation;\n        // console.log(place);\n        // console.log(startLocation);\n        // this.props.onPlaceLoaded(place);\n    }\n\n    render() {\n        return (\n            <input ref={this.searchInput}  id=\"search\" placeholder=\"Enter your address\"\n                type=\"text\" id=\"searchBox\" className=\"\"></input>\n            // <SearchBox ref={this.searchInput}/>\n        );\n    }\n}","import React, {\n\tComponent\n} from 'react';\nimport {\n\tMap,\n\tTileLayer,\n\tMarker,\n\tPopup\n} from 'react-leaflet';\n\nimport L from 'leaflet';\n\nimport './surveyStyle.css';\n\n// let State = {\n//   lat: number,\n//   lng: number,\n//   zoom: number,\n// }\n// <{}, State> arg for Component?\n\nlet dummyState = {\n\tstart: {name: \"USC Village\", lat: 34.0256262, long: -118.285044},\n\tdistance: 5,\n\tamenity: {restaurant: true},\n\tleisure: {},\n\tend: {name: \"Little Galen Center\", lat: 34.0228165, long: -118.2870715}\n}\n\n\nexport class ResultsMap extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\t// this.state = {\n\t\t// \tlat: 51.505,\n\t\t// \tlng: -0.09,\n\t\t// \tzoom: 13,\n\t\t// }\n\t\tthis.state = dummyState;\n\t}\n\n\trender() {\n\t\tlet startPosition = [this.state.start.lat, this.state.start.long]\n\t\tlet redIcon = new L.Icon({\n\t\t\ticonUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n\t\t\tshadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n\t\t\ticonSize: [35, 51],\n\t\t\ticonAnchor: [12, 41],\n\t\t\tpopupAnchor: [1, -34],\n\t\t\tshadowSize: [41, 41]\n\t\t  });\n\t\tlet blueIcon = new L.Icon({\n\t\t\ticonUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n\t\t\tshadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n\t\t\ticonSize: [25, 41],\n\t\t\ticonAnchor: [12, 41],\n\t\t\tpopupAnchor: [1, -34],\n\t\t\tshadowSize: [41, 41]\n\t\t  });\n\t\treturn (\n\t\t\t<Map center={startPosition} zoom={16}>\n\t\t\t\t<TileLayer\n\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n\t\t\t\t<Marker position={startPosition} icon={redIcon}>\n\t\t\t\t\t<Popup>\n\t\t\t\t\t\t{this.state.start.name}\n\t\t\t\t\t</Popup>\n\t\t\t\t</Marker>\n\t\t\t\t<Marker position={[this.state.end.lat, this.state.end.long]} icon={blueIcon}>\n\t\t\t\t\t<Popup>\n\t\t\t\t\t\t{this.state.end.name}\n\t\t\t\t\t</Popup>\n\t\t\t\t</Marker>\n\t\t\t</Map>\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\tlet oLink = this.typeStrings(Object.keys(this.state.amenity), Object.keys(this.state.leisure), this.state.start.lat, this.state.start.long, this.state.distance);\n\t\tfetch(oLink).then(\n\t\t\tfunction(response) {\n\t\t\t\tlet dp = response.json();\n\t\t\t\treturn dp;\n\t\t\t}\n\t\t);\n\t}\n\n\tfindRandom100(data) {\n\t\tlet places = [];\n\t\tlet length = data.length;\n\t\tlet numsUsed = [];\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tlet index = Math.round(Math.random() * length);\n\t\t\twhile (numsUsed.includes(index)) {\n\t\t\t\tindex = Math.round(Math.random() * length);\n\t\t\t}\n\t\t\tnumsUsed.push(index);\n\t\t\tplaces.push(data[index]);\n\t\t}\n\t\treturn places;\n\t}\n\n\ttypeStrings(amenitiesList, leisureList, lat, long, radius) {\n\t\tlet link = 'https://overpass-api.de/api/interpreter?data=[out:json];';\n\t\t//l et bounds = '(47.481002,-122.459696,47.734136,-122.224433);' // should be a separate function call in the futuer\n\t\n\t\tlet bounds = this.calculateBB(lat, long, radius / 2) + ';';\n\t\tconsole.log(bounds);\n\t\tlet end = 'out;'\n\t\t\n\t\tif (amenitiesList.length > 0) {\n\t\t\tfor (let i = 0; i < amenitiesList.length; i++) {\n\t\t\t\tlink += 'node[amenity=' + amenitiesList[i] + ']' + bounds;\n\t\t\t}\n\t\t\tlink += end;\n\t\t}\n\t\tif (leisureList.length > 0) {\n\t\t\tfor (let i = 0; i < leisureList.length; i++) {\n\t\t\t\tlink += 'node[leisure=' + leisureList[i] + ']' + bounds;\n\t\t\t}\n\t\t\tlink += end;\n\t\t}\n\t\t\n\t\t//link += ';';\n\t\tconsole.log(link);\n\t\treturn link;\n\t}\n\n\tcalculateBB(lat, long, radius) {\n\t\tlet upperLat = (lat - this.getLatDiff(radius)).toFixed(6);\n\t\tlet upperLong = (long - this.getLongDiff(radius, lat)).toFixed(6);\n\t\n\t\tlet lowerLat = (lat + this.getLatDiff(radius)).toFixed(6);\n\t\tlet lowerLong = (long + this.getLongDiff(radius, lat)).toFixed(6);\n\t\n\t\t// https://gis.stackexchange.com/questions/172554/calculating-bounding-box-of-given-set-of-coordinates-from-leaflet-draw\n\t\t// create a bounding rectangle that can be used in leaflet\n\t\tlet mapBbox = [[upperLat,upperLong],[lowerLat,lowerLong]];\n\t\n\t\t// add the bounding box to the map, and set the map extent to it\n\t\t// L.rectangle(mapBbox).addTo(mymap);\n\t\t//mymap.fitBounds(mapBbox);\n\t\n\t\treturn '(' + upperLat + ',' + upperLong + ',' + lowerLat + ',' + lowerLong + ')';\n\t}\n\n\tgetLongDiff(radius, lat) {\n\t\t// return (radius) * Math.cos(((Math.PI/ 180) * lat));\n\t\treturn radius / (111 * Math.cos((Math.PI / 180) * lat));\n\t}\n\t\n\t// function dY(radius) {\n\tgetLatDiff(radius) {\n\t\treturn radius / 111;\n\t}\n}\n","import React, {Component} from 'react';\nimport {NavBar} from './NavBar.js';\nimport {Form} from 'react-bootstrap';\nimport {Button} from 'react-bootstrap';\nimport {InputGroup} from 'react-bootstrap';\nimport {SearchBar} from './SearchBar.js';\nimport {ResultsMap} from './ResultsMap.js';\nimport './surveyStyle.css';\n\nexport class FindRoute extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <CreateForm />\n            </div>\n        );\n    }\n}\n\nclass CreateForm extends React.Component {\n    constructor () {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChecks = this.handleChecks.bind(this);\n\n        this.state = {\n            amenityTypes: [\"bar\", \"cafe\", \"cinema\", \"grave_yard\", \"ice_cream\", \"library\", \"restaurant\"],\n            //leisureTypes: [\"amusement_arcade\",\"dog_park\", \"fitness_centre\", \"garden\", \"park\"],\n            amenity: {}\n            //leisure: []\n        };\n    }\n\n    render() {\n        return (\n            <Form id=\"form\">\n                <Form.Group id=\"form-group\">\n                    <h1>The Walk Buddy Route Generator</h1>\n                    <p>Please fill out a couple of questions, and soon you'll be on your way!</p>\n                </Form.Group>\n\n                <Form.Group id=\"form-group\">\n                    <div id=\"find\">\n                        <Form.Label><strong>Where are you currently located?</strong></Form.Label>\n                        <p>Note: Please only select an address that comes up in the autocomplete below :)</p>\n                    </div>\n                    <div id=\"locationField\">\n                        {/* <Form.Control type=\"text\" placeholder=\"Enter a start location\" id=\"searchBox\"></Form.Control> */}\n                        <SearchBar/>\n                    </div>\n                </Form.Group>\n\n                <Form.Group id=\"form-group\">\n                    <Form.Label><strong>What is the maximum distance you'd like to walk today?</strong></Form.Label>\n                    \n                    <div id=\"blahblah\">\n                        <InputGroup>\n                            <Form.Control type=\"number\" id=\"distanceInput\" min={0} step={1}></Form.Control>\n                            <InputGroup.Append>\n                                <InputGroup.Text id=\"distanceButton\">Kilometers</InputGroup.Text>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </div>\n                </Form.Group>\n\n                <Form.Group id=\"form-group\">\n                    <Form.Label><strong>What types of places would you like to go to?</strong></Form.Label>\n                    {this.createSurvey(\"amenityTypes\", this.state.amenityTypes, \"amenity\")}\n                    {/* {this.createSurvey(\"leisureTypes\", this.state.leisureTypes, \"leisure\")} */}\n                </Form.Group>\n\n                <Form.Group id=\"form-group\">\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>Submit</Button>\n                </Form.Group>\n            </Form>\n        )\n    }\n\n    createSurvey(id, placeTypes, overpassType) {\n        return (\n            <div id={id}>\n                <Form.Group>\n                    <p><i>{overpassType.charAt(0).toUpperCase() + overpassType.slice(1)}</i></p>\n                    {placeTypes.map(type => (\n                        <InputGroup>\n                            <Form.Check \n                                type=\"checkbox\"\n                                label={type.charAt(0).toUpperCase() + type.slice(1)}\n                                onClick={this.handleChecks}\n                                defaultChecked={false}\n                                name={type}\n                            />\n                        </InputGroup>\n                    ))}\n                </Form.Group>\n            </div>\n        );\n    }\n\n    handleSubmit(e) {\n        console.log(e.target);\n        console.log(e);\n        console.log(e.target.elements);\n        console.log(this.state);\n    }\n\n    handleChecks(e) {\n        console.log(e.target);\n        console.log(e.target.checked);\n        console.log(e.target.name);\n        console.log(this.state);\n\n        let pT = e.target.name;\n\n\n        this.setState(prevState => ({\n            amenity: {pT: e.target.checked}\n        }));\n    }\n}\n\n\n// const google = window.google;\n\n// class SearchBar extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.searchInput = React.createRef();\n//     this.search = null;\n//     this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n//     this.state = {};\n//   }\n\n//   componentDidMount() {\n//     this.search = new google.maps.places.SearchBox(this.searchInput.current);\n\n//     this.search.addListener('places_changed', this.handlePlaceChanged);\n//   }\n\n//   handlePlaceChanged(){\n//     let place = this.search.getPlaces();\n//     let startLocation = {};\n//     startLocation.name = place[0].name;\n//     startLocation.lat = place[0].geometry.location.lat();\n//     startLocation.long = place[0].geometry.location.lng();\n//     if (place.length == 0) {\n//         return;\n//     }\n\n//     this.state.place = startLocation;\n//     console.log(place);\n//     console.log(startLocation);\n//     // this.props.onPlaceLoaded(place);\n//   }\n\n//   render() {\n//     return (\n//         <input ref={this.searchInput}  id=\"search\" placeholder=\"Enter your address\"\n//          type=\"text\"></input>\n//         // <SearchBox ref={this.searchInput}/>\n//     );\n//   }\n// }","import React, {Component} from 'react';\nimport {Button} from 'react-bootstrap';\nimport {Card} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart} from '@fortawesome/free-solid-svg-icons';\n// import cardPlaces from './data/cardPlaces.json';\n\nexport class NavButton extends React.Component {\n    render() {\n        return (\n            <Button variant = 'dark' size = 'm'>Navigate</Button>\n        )\n    }\n}\n\nexport class Heart extends React.Component {\n    render() {\n        // removeCard() {\n\n        // }\n        return (\n            <h2 className = 'favb'>\n                <FontAwesomeIcon icon = {faHeart} />\n            </h2>\n        )\n    }\n}\n\nexport class PlaceCards extends React.Component {\n    hello () {\n        console.log(this.props.place.name);\n    }\n    render() {\n        return (\n            <Card className = 'col-xs-auto col-s-4 col-md-5 col-lg-5 col-xl-3'>\n                {this.hello()}\n                {/* <Card.Img variant = 'top' src = \"https://info340d-au18.github.io/team-bread/img/arboretum.jpg\" style = {{padding: '1rem'}}/> */}\n                <Card.Img variant = 'top' src = {this.props.place.source} style = {{padding: '1rem'}} alt = {this.props.place.alt} />\n                <Card.Body>\n                    {console.log(this.props.place.name)}\n                    <Card.Title><h3>{this.props.place.name}</h3></Card.Title>\n                    <Card.Text>{this.props.place.description}</Card.Text>\n                    <div>\n                        <NavButton />\n                        <Heart />\n                    </div>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport class PlaceGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            favPlace: []\n        }\n    }\n    render() {\n        return (\n            <div className = 'row justify-content-center'>\n                {this.props.place.map((place) => {\n                    return <PlaceCards place={place} />\n                })}\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {useState} from 'react';\nimport { Button } from 'react-bootstrap';\nimport {Carousel} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faHeart} from '@fortawesome/free-regular-svg-icons';\nimport './index.css';\nimport { NavButton } from './PlaceCards';\nlibrary.add(faHeart);\n\n// add to favorites button\nexport class FavButton extends React.Component {\n    render() {\n        return (\n            <div className='favbut'>\n                <Button variant = 'dark' size = 'm'>\n                    <FontAwesomeIcon icon = {faHeart} />\n                    Favorite\n                </Button>\n            </div>\n        );\n    }\n}\n\n// place information\nexport class PlaceHover extends React.Component {\n    render() {\n        return (\n            <div className = 'place-des'>\n                <h3>Hello</h3>\n                <h4>Description</h4>\n                <div>\n                    <FavButton />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class CarouselItemP extends React.Component {\n    render() {\n        return (\n            <Carousel.Item>\n                <img className=\"d-block w-100\" src = \"https://info340d-au18.github.io/team-bread/img/arboretum.jpg\" alt = 'first'></img>\n                <PlaceHover />\n            </Carousel.Item>\n        )\n    }\n}\n\nexport class CarouselPlace extends React.Component {\n    render() {\n        return (\n            // <Carousel>\n            //     <CarouselItem />\n            // </Carousel>\n            // <Carousel>\n            //     <CarouselItemP />\n            <Carousel style = {{padding: '2rem'}}>\n                <Carousel.Item>\n                    <div className = 'wrap-item'>\n                        <img\n                        className=\"d-block w-100\"\n                        src = \"https://info340d-au18.github.io/team-bread/img/burke.jpg\"\n                        alt=\"First slide\" />\n                            {/* <div className = 'place-des'> */}\n                            {/* <Carousel.Caption> */}\n                                <h3>Burke Gilman Trail</h3>\n                                <p> A 19.8 mile long trail for bikers, walkers, and runners. Stops on the trail include Gas Works Park, The Fremont Troll, and University of Washington</p>\n                                <FavButton />\n                            {/* </Carousel.Caption> */}\n                            {/* </div> */}\n                    </div>\n                    \n                </Carousel.Item>\n                <Carousel.Item>\n                    <div className = 'wrap-item'>\n                        <img\n                        className=\"d-block w-100\"\n                        src = \"https://info340d-au18.github.io/team-bread/img/ravenna.jpg\"\n                        alt=\"First slide\" />\n                        {/* <div className = 'place-des'> */}\n                            <h3>Ravenna Park Trail</h3>\n                            <p> A 1.7 mile loop with wild flower features. Good for an hour's walk! Near the University District and a perfect place to take your dog on a short walk.</p>\n                            <FavButton />\n                        {/* </div> */}\n                    </div>\n                </Carousel.Item>\n\n                <Carousel.Item>\n                    <div className = 'wrap-item'>\n                        <img\n                        className=\"d-block w-100\"\n                        src = \"https://info340d-au18.github.io/team-bread/img/rattlesnake.jpg\"\n                        alt=\"First slide\" />\n                        {/* <div className = 'place-des'> */}\n                            <h3>Rattlesnake Ridge Trail</h3>\n                            <p> A 4.0 mile roundtrip hiking trail in the North Bend Area. Perfect for beginning hikers. Short hike with a beautiful view</p>\n                            <FavButton />\n                        {/* </div> */}\n                    </div>\n                </Carousel.Item>\n            </Carousel>\n        );\n\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Loggin} from './Loggin.js';\n\nimport {NavBar} from './NavBar.js';\nimport {StartSurvey} from './StartSurvey.js';\nimport {HowTo} from './HowTo.js';\nimport {FindRoute} from './FindRoute.js';\nimport {ResultsMap} from './ResultsMap.js';\nimport {PlaceGroup} from './PlaceCards';\nimport cardPlaces from './data/cardPlaces.json';\nimport {CarouselPlace} from './Carousel.js';\n\nexport class App extends React.Component {\n\trender() {\n    \treturn (\n      \n      // <Loggin />\n\t\t\t<main>\n\t\t\t\t{/* <StartSurvey />*/}\n\t\t\t\t\n\t\t\t\t<FindRoute />\n\t\t\t\t<ResultsMap />\n\t\t\t\t<HowTo />\n\t\t\t\t<CarouselPlace />\n\t\t\t\t<PlaceGroup place={cardPlaces}/>\n\t\t\t</main>\n    \t);\n  \t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}